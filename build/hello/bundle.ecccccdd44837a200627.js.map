{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@mantou/gem/lib/utils.js","webpack:///./node_modules/@mantou/gem/lib/store.js","webpack:///./node_modules/@mantou/gem/lib/history.js","webpack:///./node_modules/lit-html/lib/directive.js","webpack:///./node_modules/lit-html/lib/dom.js","webpack:///./node_modules/lit-html/lib/part.js","webpack:///./node_modules/lit-html/lib/template.js","webpack:///./node_modules/lit-html/lib/template-instance.js","webpack:///./node_modules/lit-html/lib/template-result.js","webpack:///./node_modules/lit-html/lib/parts.js","webpack:///./node_modules/lit-html/lib/default-template-processor.js","webpack:///./node_modules/lit-html/lib/template-factory.js","webpack:///./node_modules/lit-html/lib/render.js","webpack:///./node_modules/lit-html/lit-html.js","webpack:///./node_modules/lit-html/directives/repeat.js","webpack:///./node_modules/lit-html/directives/guard.js","webpack:///./node_modules/lit-html/directives/if-defined.js","webpack:///./node_modules/@mantou/gem/lib/element.js","webpack:///./node_modules/@mantou/gem/lib/decorators.js","webpack:///./src/index.ts","webpack:///./src/examples/hello/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","installedModules","1","installedWasmModules","wasmImportObjects","2","p0i32","p1i32","exports","__webpack_require__","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","forEach","wasmModuleId","installedWasmModuleData","importObject","req","fetch","WebAssembly","compileStreaming","all","then","items","instantiate","instantiateStreaming","x","arrayBuffer","bytes","res","w","instance","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","s","_a","_b","updaterSet","Set","addMicrotask","func","size","queueMicrotask","clear","delete","add","Pool","Image","super","this","currentId","count","pool","Map","setPrototypeOf","item","dispatchEvent","CustomEvent","set","StorageType","StorageCache","LOCALSTORAGE","SESSIONSTORAGE","Storage","cache","getItem","result","JSON","parse","removeItem","setItem","stringify","QueryString","URLSearchParams","param","query","fromEntries","entries","keys","append","string","toString","WeakMap","emptyFunction","HANDLES_KEY","createStore","originStore","store","writable","updateStore","assign","historyState","list","currentIndex","openHandleMap","colseHandleMap","shouldCloseHandleMap","generateState","open","close","shouldClose","$key","$open","$close","$shouldClose","state","Date","now","performance","basePath","v","path","location","pathname","replace","RegExp","hash","title","history","forward","back","options","pushState","newList","concat","closeHandle","replaceState","splice","__gemHistory","search","storage","sessionStorageKey","getSession","addEventListener","setSession","navigating","prevState","newStateIndex","findIndex","newState","openHandle","shouldCloseHandle","directives","f","args","isDirective","has","isCEPolyfill","customElements","polyfillWrapFlushCallback","reparentNodes","container","start","end","before","nextSibling","insertBefore","removeNodes","removeChild","noChange","nothing","marker","String","Math","random","nodeMarker","markerRegex","boundAttributeSuffix","Template","element","parts","nodesToRemove","stack","walker","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","node","nextNode","nodeType","hasAttributes","attributes","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","tagName","currentNode","indexOf","parent","parentNode","lastIndex","insert","createMarker","match","createTextNode","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","template","processor","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","innerHTML","getHTML","getTemplateElement","svgElement","firstChild","isPrimitive","isIterable","Array","isArray","iterator","AttributeCommitter","dirty","_createPart","text","_getValue","committer","directive","__pendingValue","startNode","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","valueAsString","templateFactory","update","_clone","itemParts","itemPart","appendIntoPart","insertAfterPart","PropertyCommitter","single","PropertyPart","eventOptionsSupported","removeEventListener","_e","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","join","createAndInsertPart","containerPart","beforePart","beforeNode","newPart","updatePart","insertPartBefore","removePart","generateMap","map","partListCache","keyListCache","repeat","keyFnOrTemplate","keyFn","oldParts","oldKeys","newParts","newValues","newKeys","newKeyToIndexMap","oldKeyToIndexMap","oldHead","oldTail","newHead","newTail","oldIndex","oldPart","previousValues","guard","previousValue","every","from","ifDefined","litHtml","svg","render","appendInto","__litHtml","HTMLElement","shadow","setState","willMount","mounted","shouldUpdate","__update","updated","attributeChanged","propertyChanged","unmounted","__renderRoot","attachShadow","observedAttributes","observedPropertys","defineEvents","observedStores","adoptedStyleSheets","attr","prop","_substr","$1","toUpperCase","kebabToCamelCase","configurable","__connectProperty","connect","shadowRoot","isEventHandle","propValue","detail","evt","__isMounted","payload","_name","_oldValue","_newValue","oldValue","newValue","constructor","disconnect","GemElement","renderTaskPool","loop","tick","requestAnimationFrame","callback","timestamp","task","define","attribute","con","emitter","Class","width","height","_timer","y","detect","QrDetector","new","Number","Uint8Array","init","stream","navigator","mediaDevices","getUserMedia","video","facingMode","videoElement","canvas","ctx","getContext","srcObject","play","min","videoWidth","videoHeight","scale","clientWidth","detector","drawImage","buffer","getImageData","detected","valid","success","bound","querySelector","assignedElements","startsWith","URL","cancelAnimationFrame","cls","body"],"mappings":"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","file":"bundle.ecccccdd44837a200627.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".bundle.\" + {\"0\":\"caabe3955468780d9e4d\"}[chunkId] + \".js\"\n \t}\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t2: function() {\n \t\t\treturn {\n \t\t\t\t\"./index.js\": {\n \t\t\t\t\t\"__wbindgen_throw\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"__wbindgen_throw\"](p0i32,p1i32);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"0\":[2]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"2\":\"c66ddb28ed29f500e303\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","var _a, _b;\nconst updaterSet = new Set();\nexport function addMicrotask(func) {\n    if (!updaterSet.size) {\n        // delayed execution callback after updating store\n        window.queueMicrotask(() => {\n            updaterSet.forEach(func => func());\n            updaterSet.clear();\n        });\n    }\n    updaterSet.delete(func);\n    updaterSet.add(func);\n}\n/**\n * `EventTarget` safari not support\n * https://bugs.webkit.org/show_bug.cgi?id=174313\n */\nexport class Pool extends Image {\n    constructor() {\n        super();\n        this.currentId = 0;\n        this.count = 0;\n        this.pool = new Map();\n        // https://bugs.webkit.org/show_bug.cgi?id=198674\n        Object.setPrototypeOf(this, Pool.prototype);\n    }\n    add(item) {\n        if (!this.pool.size)\n            this.dispatchEvent(new CustomEvent('start'));\n        this.pool.set(this.count, item);\n        this.count += 1;\n    }\n    get() {\n        const item = this.pool.get(this.currentId);\n        if (item) {\n            this.pool.delete(this.currentId);\n            this.currentId += 1;\n            if (!this.pool.size)\n                this.dispatchEvent(new CustomEvent('end'));\n        }\n        return item;\n    }\n}\nvar StorageType;\n(function (StorageType) {\n    StorageType[\"LOCALSTORAGE\"] = \"localStorage\";\n    StorageType[\"SESSIONSTORAGE\"] = \"sessionStorage\";\n})(StorageType || (StorageType = {}));\nclass StorageCache {\n    constructor() {\n        this[_a] = {};\n        this[_b] = {};\n    }\n}\n_a = StorageType.LOCALSTORAGE, _b = StorageType.SESSIONSTORAGE;\nexport class Storage {\n    constructor() {\n        this.cache = new StorageCache();\n    }\n    get(key, type) {\n        if (key in this.cache[type])\n            return this.cache[type][key];\n        const value = window[type].getItem(key);\n        if (!value)\n            return undefined;\n        try {\n            const result = JSON.parse(value);\n            this.cache[type][key] = result;\n            return result;\n        }\n        catch (e) {\n            window[type].removeItem(key);\n        }\n    }\n    getLocal(key) {\n        return this.get(key, StorageType.LOCALSTORAGE);\n    }\n    getSession(key) {\n        return this.get(key, StorageType.SESSIONSTORAGE);\n    }\n    set(key, value, type) {\n        this.cache[type][key] = value;\n        return window[type].setItem(key, JSON.stringify(value));\n    }\n    setLocal(key, value) {\n        return this.set(key, value, StorageType.LOCALSTORAGE);\n    }\n    setSession(key, value) {\n        return this.set(key, value, StorageType.SESSIONSTORAGE);\n    }\n}\nexport class QueryString extends URLSearchParams {\n    constructor(param) {\n        if (param instanceof QueryString) {\n            return param;\n        }\n        super(param);\n        /**\n         * can't extend `URLSearchParams`\n         * https://bugs.webkit.org/show_bug.cgi?id=198674\n         */\n        Object.setPrototypeOf(this, QueryString.prototype);\n    }\n    concat(param) {\n        let query;\n        if (typeof param === 'string') {\n            query = Object.fromEntries(new URLSearchParams(param).entries());\n        }\n        else {\n            query = param;\n        }\n        Object.keys(query).forEach(key => {\n            this.append(key, query[key]);\n        });\n    }\n    toString() {\n        const string = super.toString();\n        return string ? `?${string}` : '';\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\n// 写 html 文本\nexport function raw(arr, ...args) {\n    return arr.reduce((prev, current, index) => prev + (args[index - 1] || '') + current);\n}\n// 写 css 文本，在 CSSStyleSheet 中使用\nexport function css(arr, ...args) {\n    return raw(arr, ...args);\n}\nconst rulesWeakMap = new WeakMap();\n/**\n * !!! 目前只有 Chrome 支持\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1520690\n *\n * 创建 style sheet 用于 `adoptedStyleSheets`\n * @param rules string 不能动态更新的 css\n * @param mediaQuery string 媒体查询\n */\nexport function createCSSSheet(rules, mediaQuery = '') {\n    let cssSheet = rulesWeakMap.get(rules);\n    if (!cssSheet) {\n        const sheet = new CSSStyleSheet();\n        sheet.media.mediaText = mediaQuery;\n        let style = '';\n        if (typeof rules === 'string') {\n            style = rules;\n        }\n        else {\n            Object.keys(rules).forEach(key => {\n                sheet[key] = rules[key].type === 'tag' ? key : `${key}-${rules[key].key}`;\n                style += rules[key].str.replace(/&/g, sheet[key]);\n            });\n            rulesWeakMap.set(rules, sheet);\n        }\n        sheet.replaceSync(style);\n        cssSheet = sheet;\n    }\n    return cssSheet;\n}\nfunction randomStr(number = 5, origin = '0123456789abcdefghijklmnopqrstuvwxyz') {\n    const len = origin.length;\n    let str = '';\n    for (let i = 0; i < number; i++) {\n        str += origin[Math.floor(Math.random() * len)];\n    }\n    return str;\n}\n// 只支持一层嵌套\n// https://drafts.csswg.org/css-nesting-1/\nfunction flatStyled(style, type) {\n    const subStyle = [];\n    let str = `& {${style.replace(new RegExp('&.*{(.*)}', 'gs'), function (substr) {\n        subStyle.push(substr);\n        return '';\n    })}}` + subStyle.join('');\n    if (type !== 'tag')\n        str = str.replace(/&/g, type === 'class' ? '.&' : '#&');\n    return { str, key: randomStr(), type };\n}\n// 写 css 文本，在 CSSStyleSheet 中使用，使用 styed-components 高亮\n//\n// createCSSSheet({\n//   red: styled.class`\n//     background: red;\n//     &:hover {\n//       background: blue;\n//     }\n//   `,\n// });\nexport const styled = {\n    class: (arr, ...args) => {\n        const style = raw(arr, ...args);\n        return flatStyled(style, 'class');\n    },\n    id: (arr, ...args) => {\n        const style = raw(arr, ...args);\n        return flatStyled(style, 'id');\n    },\n    tag: (arr, ...args) => {\n        const style = raw(arr, ...args);\n        return flatStyled(style, 'tag');\n    },\n};\nexport function camelToKebabCase(str) {\n    return str.replace(/[A-Z]/g, ($1) => '-' + $1.toLowerCase());\n}\nexport function kebabToCamelCase(str) {\n    return str.replace(/-(.)/g, (_substr, $1) => $1.toUpperCase());\n}\nexport function emptyFunction() {\n    // 用于占位的空函数\n}\n//# sourceMappingURL=utils.js.map","import { addMicrotask } from './utils';\n// 不使用符号，方便跨 Realms\nexport const HANDLES_KEY = 'gem@storeHandlesKey';\nexport function createStore(originStore) {\n    const store = originStore;\n    // 序列化时忽略\n    Object.defineProperty(store, HANDLES_KEY, { enumerable: false, value: new Set(), writable: true });\n    return store;\n}\nexport function createStoreSet(originStoreSet) {\n    const keys = Object.keys(originStoreSet);\n    keys.forEach(key => {\n        const store = originStoreSet[key];\n        createStore(store);\n    });\n    return originStoreSet;\n}\nexport function updateStore(store, value) {\n    Object.assign(store, value);\n    const listeners = store[HANDLES_KEY];\n    listeners.forEach(func => {\n        addMicrotask(func);\n    });\n}\nexport function connect(store, func) {\n    const listeners = store[HANDLES_KEY];\n    listeners.add(func);\n}\nexport function disconnect(store, func) {\n    const listeners = store[HANDLES_KEY];\n    listeners.delete(func);\n}\n//# sourceMappingURL=store.js.map","import { createStore, updateStore } from './store';\nimport { Storage, QueryString } from './utils';\nconst historyState = createStore({\n    list: [{}],\n    currentIndex: 0,\n});\nconst openHandleMap = new WeakMap();\nconst colseHandleMap = new WeakMap();\nconst shouldCloseHandleMap = new WeakMap();\nfunction generateState(data, open, close, shouldClose) {\n    if (data.$key)\n        throw new Error('`$key` is not allowed');\n    if (data.$open)\n        throw new Error('`$open` is not allowed');\n    if (data.$close)\n        throw new Error('`$close` is not allowed');\n    if (data.$shouldClose)\n        throw new Error('`$shouldClose` is not allowed');\n    const state = Object.assign(Object.assign({}, data), { $key: Date.now() + performance.now(), $open: !!open, $close: !!close, $shouldClose: !!shouldClose });\n    openHandleMap.set(state, open);\n    colseHandleMap.set(state, close);\n    shouldCloseHandleMap.set(state, shouldClose);\n    return state;\n}\nlet basePath = '';\nlet history = {\n    historyState,\n    get basePath() {\n        return basePath;\n    },\n    set basePath(v) {\n        const { list, currentIndex } = historyState;\n        // 应用初始化的时候设置\n        const location = list[currentIndex];\n        location.path = window.location.pathname.replace(new RegExp(`^${v}`), '');\n        updateStore(historyState, {});\n        basePath = v;\n    },\n    get location() {\n        const { list, currentIndex } = historyState;\n        const location = list[currentIndex];\n        return {\n            get query() {\n                return new QueryString(location.query);\n            },\n            hash: location.hash,\n            path: location.path,\n            state: location.state,\n            title: location.title,\n        };\n    },\n    forward() {\n        window.history.forward();\n    },\n    back() {\n        window.history.back();\n    },\n    push(options) {\n        const { path = '', open, close, shouldClose } = options;\n        const query = options.query || '';\n        const hash = options.hash || '';\n        const title = options.title || '';\n        const data = options.data || {};\n        const state = generateState(data, open, close, shouldClose);\n        window.history.pushState(state, title, history.basePath + path + new QueryString(query) + hash);\n        const { list, currentIndex } = historyState;\n        if (hash !== list[currentIndex].hash)\n            window.dispatchEvent(new CustomEvent('hashchange'));\n        const newList = list.slice(0, currentIndex + 1).concat({\n            state,\n            title,\n            path,\n            query,\n            hash,\n        });\n        updateStore(historyState, {\n            list: newList,\n            currentIndex: newList.length - 1,\n        });\n    },\n    // push 一条历史记录\n    // 有 close 处理函数时先执行 closeHandle 在 replace\n    // 比如在 modal 打开时跳转页面\n    // 不完美：只支持在 1 级 modal 中切换页面\n    pushWithoutCloseHandle(options) {\n        const { list, currentIndex } = historyState;\n        const { state } = list[currentIndex];\n        if (state.$close) {\n            const closeHandle = colseHandleMap.get(state);\n            if (closeHandle)\n                closeHandle();\n            history.replace(options);\n        }\n        else {\n            history.push(options);\n        }\n    },\n    // 修改 url 意外的状态\n    pushState(options) {\n        const { list, currentIndex } = historyState;\n        const { path, query, hash } = list[currentIndex];\n        history.push(Object.assign({ path,\n            query,\n            hash }, options));\n    },\n    replace(options) {\n        const { path = '', open, close, shouldClose } = options;\n        const query = options.query || '';\n        const hash = options.hash || '';\n        const data = options.data || {};\n        const title = options.title || '';\n        const state = generateState(data, open, close, shouldClose);\n        window.history.replaceState(state, title, history.basePath + path + new QueryString(query) + hash);\n        const { list, currentIndex } = historyState;\n        if (hash !== list[currentIndex].hash)\n            window.dispatchEvent(new CustomEvent('hashchange'));\n        list.splice(currentIndex, 1, {\n            state,\n            title,\n            path,\n            query,\n            hash,\n        });\n        updateStore(historyState, {\n            list,\n        });\n    },\n    // 修改 url 意外的状态\n    replaceState(options) {\n        const { list, currentIndex } = historyState;\n        const { path, query, hash } = list[currentIndex];\n        history.replace(Object.assign({ path,\n            query,\n            hash }, options));\n    },\n};\nconst hasOtherHistory = !!window.__gemHistory;\nif (hasOtherHistory) {\n    history = window.__gemHistory;\n    const basePath = history.basePath;\n    Object.defineProperty(history, 'basePath', {\n        get() {\n            return basePath;\n        },\n        set() {\n            throw new Error('已经有其他环境使用 gem , 会共享 history 对象，禁止再修改 history 对象');\n        },\n    });\n}\nelse {\n    window.__gemHistory = history;\n    if (!window.history.state) {\n        // 初始化 historyItem[]\n        const { pathname, search, hash } = window.location;\n        history.replace({ path: pathname, query: search, hash });\n    }\n    else if (window.history.state.$close) {\n        // 有 handle 返回键的页面刷新\n        history.back();\n    }\n    const storage = new Storage();\n    const sessionStorageKey = 'gem@historyStateList';\n    updateStore(historyState, storage.getSession(sessionStorageKey));\n    window.addEventListener('unload', () => {\n        storage.setSession(sessionStorageKey, historyState);\n    });\n    /**\n     * 表示 popstate handler 中正在进行导航\n     */\n    let navigating = false;\n    window.addEventListener('popstate', event => {\n        if (!event.state || !event.state.$key) {\n            // 比如作为其他 app 的宿主 app\n            return;\n        }\n        if (navigating) {\n            navigating = false;\n            return;\n        }\n        // forward or back\n        // replace 不会触发\n        // url 变化前 historyItem\n        const { list, currentIndex } = historyState;\n        const { state: prevState } = list[currentIndex];\n        const newStateIndex = list.findIndex(({ state }) => state.$key === event.state.$key);\n        // gem app 嵌套 gem app，且不是同一个 history 对象时\n        if (newStateIndex === -1)\n            return;\n        const { state: newState } = list[newStateIndex];\n        if (newStateIndex > currentIndex && newState.$open) {\n            // 返回键关闭的 modal 能前进键重新打开\n            // 刷新后不能工作：刷新后 historyItem 中只有 url\n            const openHandle = openHandleMap.get(newState);\n            if (openHandle)\n                openHandle();\n        }\n        else if (prevState.$close) {\n            const closeHandle = colseHandleMap.get(prevState);\n            const shouldCloseHandle = shouldCloseHandleMap.get(prevState);\n            const notAllowClose = shouldCloseHandle && !shouldCloseHandle();\n            if (notAllowClose) {\n                navigating = true;\n                history.forward(); // 将重新触发 popstate\n                return; // 历史记录栈位置没有变化，不需要后面的 updateStore\n            }\n            else {\n                // handle 返回键\n                if (closeHandle) {\n                    closeHandle();\n                }\n                else {\n                    // 有 modal 的页面刷新会执行 back 触发 popstate\n                    // 如果是耳机 modal 页面刷新\n                    // 则还需要进行一次 back\n                    // 不完美：三级 modal 页面刷新不支持返回到初始页面\n                    navigating = true;\n                    history.back();\n                }\n            }\n        }\n        updateStore(historyState, {\n            currentIndex: newStateIndex,\n        });\n    });\n}\nexport { history };\n//# sourceMappingURL=history.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { createMarker, directive, NodePart, removeNodes, reparentNodes } from '../lit-html.js';\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(createMarker(), beforeNode);\n    container.insertBefore(createMarker(), beforeNode);\n    const newPart = new NodePart(containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof NodePart)) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update\n        // (associated with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a\n        // parallel array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n//# sourceMappingURL=repeat.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { directive } from '../lit-html.js';\nconst previousValues = new WeakMap();\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * ```\n *\n * In this case, the template only renders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard = directive((value, f) => (part) => {\n    const previousValue = previousValues.get(part);\n    if (Array.isArray(value)) {\n        // Dirty-check arrays by item\n        if (Array.isArray(previousValue) &&\n            previousValue.length === value.length &&\n            value.every((v, i) => v === previousValue[i])) {\n            return;\n        }\n    }\n    else if (previousValue === value &&\n        (value !== undefined || previousValues.has(part))) {\n        // Dirty-check non-arrays by identity\n        return;\n    }\n    part.setValue(f());\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    previousValues.set(part, Array.isArray(value) ? Array.from(value) : value);\n});\n//# sourceMappingURL=guard.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive } from '../lit-html.js';\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = directive((value) => (part) => {\n    if (value === undefined && part instanceof AttributePart) {\n        if (value !== part.value) {\n            const name = part.committer.name;\n            part.committer.element.removeAttribute(name);\n        }\n    }\n    else {\n        part.setValue(value);\n    }\n});\n//# sourceMappingURL=if-defined.js.map","/* eslint-disable @typescript-eslint/no-empty-function */\nimport * as lit from 'lit-html';\nimport { TemplateResult } from 'lit-html';\nimport { connect, disconnect, HANDLES_KEY } from './store';\nimport { Pool, addMicrotask, kebabToCamelCase, emptyFunction } from './utils';\nimport { repeat as litRepeat } from 'lit-html/directives/repeat';\nimport { guard as litGuard } from 'lit-html/directives/guard';\nimport { ifDefined as litIfDefined } from 'lit-html/directives/if-defined';\nlet litHtml = {\n    html: lit.html,\n    svg: lit.svg,\n    render: lit.render,\n    directive: lit.directive,\n    repeat: litRepeat,\n    guard: litGuard,\n    ifDefined: litIfDefined,\n};\nif (window.__litHtml) {\n    // 自定义元素不能重复定义\n    // 所以嵌套 gem app 中导出的自定义元素类可能是之前定义的类\n    // 可能造成使用的 html 对象不是同一个\n    // map, 缓存之类的会变得不同\n    // 所以需要把他们放在全局对象中\n    litHtml = window.__litHtml;\n}\nelse {\n    window.__litHtml = litHtml;\n}\nconst { html, svg, render, directive, repeat, guard, ifDefined } = litHtml;\nexport { html, svg, render, directive, repeat, guard, ifDefined, TemplateResult };\n// final 字段如果使用 symbol 或者 private 将导致 modal-base 生成匿名子类 declaration 失败\nexport class BaseElement extends HTMLElement {\n    constructor(shadow = true) {\n        super();\n        this.setState = this.setState.bind(this);\n        this.willMount = this.willMount.bind(this);\n        this.render = this.render.bind(this);\n        this.mounted = this.mounted.bind(this);\n        this.shouldUpdate = this.shouldUpdate.bind(this);\n        this.__update = this.__update.bind(this);\n        this.updated = this.updated.bind(this);\n        this.attributeChanged = this.attributeChanged.bind(this);\n        this.propertyChanged = this.propertyChanged.bind(this);\n        this.unmounted = this.unmounted.bind(this);\n        this.__renderRoot = shadow ? this.attachShadow({ mode: 'open' }) : this;\n        const { observedAttributes, observedPropertys, defineEvents, observedStores, adoptedStyleSheets } = new.target;\n        if (observedAttributes) {\n            observedAttributes.forEach(attr => {\n                const prop = kebabToCamelCase(attr);\n                if (typeof this[prop] === 'function') {\n                    throw `Don't use attribute with the same name as native methods`;\n                }\n                // Native attribute，no need difine property\n                // e.g: `id`, `title`, `hidden`, `alt`, `lang`\n                if (this[prop] !== undefined)\n                    return;\n                // !!! Custom property shortcut access only supports `string` type\n                Object.defineProperty(this, prop, {\n                    configurable: true,\n                    get() {\n                        // Return empty string if attribute does not exist\n                        return this.getAttribute(attr) || '';\n                    },\n                    set(v) {\n                        if (v === null) {\n                            this.removeAttribute(attr);\n                        }\n                        else {\n                            this.setAttribute(attr, v);\n                        }\n                    },\n                });\n            });\n        }\n        if (observedPropertys) {\n            observedPropertys.forEach(prop => {\n                this.__connectProperty(prop, false);\n            });\n        }\n        if (defineEvents) {\n            defineEvents.forEach(event => {\n                this.__connectProperty(event, true);\n                this[event] = emptyFunction;\n            });\n        }\n        if (observedStores) {\n            observedStores.forEach(store => {\n                if (!store[HANDLES_KEY]) {\n                    throw new Error('`observedStores` only support store module');\n                }\n                connect(store, this.__update);\n            });\n        }\n        if (adoptedStyleSheets) {\n            if (this.shadowRoot) {\n                this.shadowRoot.adoptedStyleSheets = adoptedStyleSheets;\n            }\n            else {\n                document.adoptedStyleSheets = document.adoptedStyleSheets.concat(adoptedStyleSheets);\n            }\n        }\n    }\n    /**@final */\n    __connectProperty(prop, isEventHandle = false) {\n        if (prop in this)\n            return;\n        let propValue = this[prop];\n        Object.defineProperty(this, prop, {\n            configurable: true,\n            get() {\n                return propValue;\n            },\n            set(v) {\n                if (v !== propValue) {\n                    if (isEventHandle) {\n                        if (v.isEventHandle)\n                            throw `Don't assign a wrapped event handler`;\n                        propValue = (detail) => {\n                            const evt = new CustomEvent(prop.toLowerCase(), { detail });\n                            this.dispatchEvent(evt);\n                            v(evt);\n                        };\n                        propValue.isEventHandle = true;\n                    }\n                    else {\n                        propValue = v;\n                    }\n                    if (this.__isMounted) {\n                        this.propertyChanged(prop, propValue, v);\n                        addMicrotask(this.__update);\n                    }\n                }\n            },\n        });\n    }\n    /**@final */\n    setState(payload) {\n        Object.assign(this.state, payload);\n        addMicrotask(this.__update);\n    }\n    /**@lifecycle */\n    willMount() { }\n    /**@lifecycle */\n    render() {\n        return html `\n      <slot></slot>\n    `;\n    }\n    /**@lifecycle */\n    mounted() { }\n    /**@lifecycle */\n    shouldUpdate() {\n        return true;\n    }\n    /**@final */\n    __update() {\n        if (this.__isMounted && this.shouldUpdate()) {\n            render(this.render(), this.__renderRoot);\n            this.updated();\n        }\n    }\n    /**@helper */\n    update() {\n        this.__update();\n    }\n    /**@lifecycle */\n    updated() { }\n    // 同步触发\n    /**@lifecycle */\n    propertyChanged(_name, _oldValue, _newValue) { }\n    // 异步触发\n    /**@lifecycle */\n    attributeChanged(_name, _oldValue, _newValue) { }\n    /**@lifecycle */\n    unmounted() { }\n    /**@private */\n    /**@final */\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (this.__isMounted) {\n            this.attributeChanged(name, oldValue, newValue);\n            addMicrotask(this.__update);\n        }\n    }\n    /**@private */\n    /**@final */\n    // adoptedCallback() {}\n    /**@private */\n    /**@final */\n    disconnectedCallback() {\n        const constructor = this.constructor;\n        if (constructor.observedStores) {\n            constructor.observedStores.forEach(store => {\n                disconnect(store, this.__update);\n            });\n        }\n        this.unmounted();\n        this.__isMounted = false;\n    }\n}\nexport class GemElement extends BaseElement {\n    /**@private */\n    /**@final */\n    connectedCallback() {\n        this.willMount();\n        render(this.render(), this.__renderRoot);\n        this.mounted();\n        this.__isMounted = true;\n    }\n}\n// global render task pool\nconst renderTaskPool = new Pool();\nlet loop = false;\nconst tick = () => {\n    window.requestAnimationFrame(function callback(timestamp) {\n        const task = renderTaskPool.get();\n        if (task) {\n            task();\n            if (performance.now() - timestamp < 16) {\n                callback(timestamp);\n                return;\n            }\n        }\n        // `renderTaskPool` not empty\n        if (loop) {\n            tick();\n        }\n    });\n};\nrenderTaskPool.addEventListener('start', () => {\n    loop = true;\n    tick();\n});\nrenderTaskPool.addEventListener('end', () => (loop = false));\nexport class AsyncGemElement extends BaseElement {\n    /**@final */\n    __update() {\n        renderTaskPool.add(() => {\n            if (this.shouldUpdate()) {\n                render(this.render(), this.__renderRoot);\n                this.updated();\n            }\n        });\n    }\n    /**@private */\n    /**@final */\n    connectedCallback() {\n        this.willMount();\n        renderTaskPool.add(() => {\n            render(this.render(), this.__renderRoot);\n            this.mounted();\n            this.__isMounted = true;\n        });\n    }\n}\n// 重写了全局 customElements\n// 原因是方便多个独立 app 同时使用 gem\n// 用户使用和 gem 同名的元素不会生效也不会报错\nconst define = customElements.define.bind(customElements);\ncustomElements.define = function (tagName, Class, options) {\n    if (!customElements.get(tagName)) {\n        define(tagName, Class, options);\n    }\n};\n//# sourceMappingURL=element.js.map","import { camelToKebabCase } from './utils';\nexport function attribute(target, prop) {\n    const con = target.constructor;\n    if (!con.observedAttributes)\n        con.observedAttributes = [];\n    con.observedAttributes.push(camelToKebabCase(prop));\n}\nexport function property(target, prop) {\n    const con = target.constructor;\n    if (!con.observedPropertys)\n        con.observedPropertys = [];\n    con.observedPropertys.push(prop);\n}\nexport function emitter(target, event) {\n    const con = target.constructor;\n    if (!con.defineEvents)\n        con.defineEvents = [];\n    con.defineEvents.push(event);\n}\nexport function adoptedStyle(style) {\n    return function (cls) {\n        const c = cls;\n        if (!c.adoptedStyleSheets)\n            c.adoptedStyleSheets = [];\n        c.adoptedStyleSheets.push(style);\n    };\n}\nexport function connectStore(store) {\n    // 这里的签名该怎么写？\n    return function (cls) {\n        const c = cls;\n        if (!c.observedStores)\n            c.observedStores = [];\n        c.observedStores.push(store);\n    };\n}\nexport function customElement(name) {\n    return function (cls) {\n        customElements.define(name, cls);\n    };\n}\n//# sourceMappingURL=decorators.js.map","import { GemElement, customElement, attribute, emitter, html } from '@mantou/gem';\n\ninterface State {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\n/**\n * @attr width\n * @attr height\n * @attr type\n * @attr bound\n * @fires success\n * @fires detected\n * @slot video\n */\n@customElement('qr-scan')\nexport class QrScan extends GemElement<State> {\n  @attribute width: string;\n  @attribute height: string;\n  @attribute type: 'url';\n  @attribute bound: string;\n  @emitter success: (result: string) => void;\n  @emitter detected: (result: string) => void;\n\n  _timer = 0;\n\n  state = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  };\n\n  constructor(width?: number, height?: number) {\n    super();\n    if (width) this.width = String(width);\n    if (height) this.height = String(height);\n  }\n\n  get videoElement(): HTMLVideoElement | null {\n    const slot = this.shadowRoot?.querySelector('slot[name=video]') as HTMLSlotElement;\n    return slot.assignedElements()?.[0] as HTMLVideoElement;\n  }\n\n  detect = async (data: ImageData) => {\n    if (!this.width && !this.height) throw new Error('`width` or `height` does not exist');\n    const { QrDetector } = await import('./crate/pkg');\n    const detector = QrDetector.new(Number(this.width), Number(this.height));\n    return detector.detect(new Uint8Array(data.data));\n  };\n\n  private init = async () => {\n    if (!this.width && !this.height) return;\n    const { QrDetector } = await import('./crate/pkg');\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: 'environment',\n      },\n    });\n    let video: HTMLVideoElement;\n    if (this.videoElement) {\n      video = this.videoElement;\n    } else {\n      video = document.createElement('video');\n    }\n    const canvas = document.createElement('canvas');\n    const ctx = canvas?.getContext('2d');\n    if (!ctx) throw new Error('canvas context error');\n    video.srcObject = stream;\n    video.setAttribute('playsinline', '');\n    await video.play();\n    const width = Math.min(Number(this.width), video.videoWidth);\n    const height = Math.min(Number(this.height), video.videoHeight);\n    const x = (video.videoWidth - width) / 2;\n    const y = (video.videoHeight - height) / 2;\n    const scale = video.clientWidth / video.videoWidth;\n    this.setState({ x: x * scale, y: y * scale, width: width * scale, height: height * scale });\n    canvas.width = width;\n    canvas.height = height;\n    const detector = QrDetector.new(width, height);\n    const tick = async () => {\n      try {\n        ctx.drawImage(video, x, y, width, height, 0, 0, width, height);\n        const buffer = ctx.getImageData(0, 0, width, height).data;\n        const result = detector.detect(new Uint8Array(buffer));\n        this.detected(result);\n        if (result && this.valid(result)) this.success(result);\n      } finally {\n        this._timer = requestAnimationFrame(tick);\n      }\n    };\n    this._timer = requestAnimationFrame(tick);\n  };\n\n  valid(str: string) {\n    let type = this.type;\n    if (!type) {\n      if (str.startsWith('http')) {\n        type = 'url';\n      }\n    }\n    switch (type) {\n      case 'url':\n        try {\n          new URL(str);\n          return true;\n        } catch {\n          return false;\n        }\n      default:\n        return true;\n    }\n  }\n\n  mounted = this.init;\n\n  attributeChanged() {\n    cancelAnimationFrame(this._timer);\n    this.init();\n  }\n\n  render = () => html`\n    <style>\n      :host {\n        position: relative;\n        display: block;\n        overflow: hidden;\n      }\n      .bound {\n        position: absolute;\n        outline: 2px solid;\n        width: ${this.state.width}px;\n        height: ${this.state.height}px;\n        left: ${this.state.x}px;\n        top: ${this.state.y}px;\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <slot name=\"video\"></slot>\n    <div ?hidden=${!this.bound || !this.state.width || !this.state.height} part=\"bound\" class=\"bound\"></div>\n  `;\n}\n","import { render, html } from '@mantou/gem';\nimport '../../';\n\nconst init = (result: string) => {\n  render(\n    html`\n      <style>\n        body {\n          font-family: 'Ropa Sans', sans-serif;\n        }\n        main {\n          margin: auto;\n          width: 640px;\n        }\n        qr-scan {\n          margin-bottom: 30px;\n        }\n        video {\n          width: 100%;\n          height: 100%;\n        }\n        p {\n          background-color: #eee;\n          padding: 30px;\n        }\n      </style>\n      <main>\n        <h1>${'自定义元素 <qr-scan>，使用 wasm'}</h1>\n        <a href=\"https://cozmo.github.io/jsQR/\" target=\"_blank\">jsQR 版本</a>\n        <qr-scan width=\"1200\" height=\"620\" bound=\"true\" @detected=${(event: CustomEvent) => init(event.detail)}>\n          <video slot=\"video\"></video>\n        </qr-scan>\n        <p>${result || 'No QR code detected.'}</p>\n      </main>\n    `,\n    document.body,\n  );\n};\n\ninit('');\n"],"sourceRoot":""}